#!/usr/bin/php
<?php

require __DIR__ . '/../vendor/autoload.php';

# bootstrap cli
use GetOpt\GetOpt;
use GetOpt\Option;
use DotFiler\Commands\Backup;
use GetOpt\ArgumentException;
use DotFiler\Commands\Restore;use DotFiler\Commands\Overview;
use DotFiler\TextFormatting\Ansi;
use GetOpt\ArgumentException\Missing;

# command line arguments
// in constructor
$cli = new GetOpt();

$cli->addCommands(
    [
        new Overview(),
        new Backup(),
        new Restore(),
    ]
);

$cli->addOptions(
    [
        Option::create('h', 'help', GetOpt::NO_ARGUMENT)
              ->setDescription('Show this help'),
    ]
);

// it's ugly, yes. but it's a result of the cli package
// it's possible to move to a new package or replace it
// with my own. but this works, is simple enough, and is
// ultimately an uninteresting problem to solve
try {
    try {
        $cli->process();
    } catch (Missing $exception) {
        if ( ! $cli->getOption('help')) {
            throw $exception;
        }
    }
} catch (ArgumentException $exception) {
    file_put_contents('php://stderr', $exception->getMessage() . PHP_EOL);
    echo PHP_EOL . $cli->getHelpText();
    exit;
}

$command = $cli->getCommand();

if ( ! $command || $cli->getOption('help')) {
    echo Ansi::yellow($cli->getHelpText());
    exit;
}

call_user_func($command->getHandler(), $cli);